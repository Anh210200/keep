// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model User {
  id       Int    @id @default(autoincrement())
  email    String @unique @db.Char(64)
  password String @db.Char(255)

  employee Employee?
  @@map("users")
}

model Employee {
  id           Int      @id @default(autoincrement())
  code         String   @unique @db.Char(8)
  name         String   @db.VarChar(64)
  gender       Gender   @default(male)
  phone_number String   @unique @db.Char(10)
  address      String   @db.VarChar(255)
  avatar       Bytes?   @db.MediumBlob
  start_date   DateTime @db.DateTime()
  user_id      Int?     @unique
  schedule_id  Int?     @unique

  user         User?         @relation(fields: [user_id], references: [id])
  schedule     Schedule?     @relation(fields: [schedule_id], references: [id])
  absents      Absent[]
  timekeepings Timekeeping[]

  @@map("employees")
}

enum Gender {
  male
  female
  others
}

model Schedule {
  id                    Int      @id @default(autoincrement())
  morning_shift_start   DateTime @db.DateTime()
  morning_shift_end     DateTime @db.DateTime()
  afternoon_shift_start DateTime @db.DateTime()
  afternoon_shift_end   DateTime @db.DateTime()

  employee Employee?

  @@map("schedules")
}

model Absent {
  id         Int      @id @default(autoincrement())
  start_date DateTime @db.DateTime()
  end_date   DateTime @db.DateTime()
  note       String?  @db.Text
  reason     String   @db.VarChar(16)

  status      Int @default(0) @db.TinyInt ///  -1: Từ chối   0: Chờ duyệt   1: Chấp thuận 
  employee_id Int

  employee Employee @relation(fields: [employee_id], references: [id])

  @@unique([id, employee_id])
  @@map("absents")
}

model Timekeeping {
  id                    Int       @id @default(autoincrement())
  date                  DateTime  @db.DateTime()
  morning_shift_start   DateTime? @db.DateTime()
  morning_shift_end     DateTime? @db.DateTime()
  afternoon_shift_start DateTime? @db.DateTime()
  afternoon_shift_end   DateTime? @db.DateTime()
  status                Int       @default(0) @db.TinyInt ///   -3:Vắng   -2:Không điểm danh   -1:Điểm danh trễ   0:Chưa biết   1:Điểm danh đầy đủ
  employee_id           Int

  employee Employee @relation(fields: [employee_id], references: [id])


  @@unique([id, employee_id])
  @@map("timekeepings")
}

model QrCode {
  id String @id @db.VarChar(255)

  @@map("qrcodes")
}

model Logger {
  id          String   @id @default(uuid()) @db.VarChar(255)
  date        DateTime @db.DateTime()
  originalUrl String   @db.Text
  statusCode  String   @db.Char(3)
  userAgent   String   @db.VarChar(255)
  ip          String   @db.VarChar(255)


  @@map("loggers")
}
